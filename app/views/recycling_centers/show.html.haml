- cache "v_signs_#{@last_sign_updated}_#{@recycling_center.updated_at.to_i}_#{@recycling_center.id}" do
  %h2= @recycling_center.name

  %p
    %input#search-faction.input-lg.form-control(placeholder="Indtast søgeord..." data-bind="value: query, valueUpdate: 'keyup', event: { click: checkPlaceholder, blur: checkPlaceholder }")

  %table.table.table-bordered.table-hover.table-striped(data-bind="visible: searchedSigns().length > 0")
    %thead
      %tr
        %th
        %th Navn
        %th Kommentar
    %tbody(data-bind="foreach: searchedSigns")
      %tr
        %td(data-bind="if: !(image_url == '' || image_url == 'signs/medium/missing.png')")
          %img(data-bind="attr: { src: image_url }")
        %td(data-bind="text: name")
        %td(data-bind="text: comment")

- content_for :scripts do
  - cache "vj_signs_#{@last_sign_updated}_#{@recycling_center.updated_at.to_i}_#{@recycling_center.id}" do
    :javascript
      //<![CDATA[
      var Sign = function(name, search_terms, comment, image_url) {
        var self = this;
        self.name = name;
        self.search_terms = search_terms;
        self.comment = comment;
        self.image_url = image_url;
      }

      function AppViewModel() {
        var self = this;

        self.query = ko.observable('Indtast søgeord...');

        self.checkPlaceholder = function(data, event) {
          if (event.type == 'click') {
            if (self.query() == "Indtast søgeord...") {
              self.query('');
            }
          }

          if (event.type == 'blur') {
            if (self.query() == "") {
              self.query('Indtast søgeord...');
            }
          }
        }

        self.search = function(value) {
          if (value == '') {
            return;
          }

          function add(elem, re, search_string) {
            if (self.searchedSigns.indexOf(elem) === -1 && search_string.match(re)) {
              self.searchedSigns.push(elem);
            }
          }

          self.searchedSigns([]);

          var re = new RegExp("^" + value, 'gi');
          $.each(self.signs(), function(index, elem) {
            add(elem, re, elem.name);
          });

          re = new RegExp("(^|, )" + value, 'gi');
          $.each(self.signs(), function(index, elem) {
            add(elem, re, elem.search_terms);
          });

          re = new RegExp(value, 'gi');
          $.each(self.signs(), function(index, elem) {
            add(elem, re, elem.name);
          });

          $.each(self.signs(), function(index, elem) {
            add(elem, re, elem.search_terms);
          });
        }

        self.signs = ko.observableArray([
          #{
            @signs.map { |sign| "new Sign('#{(sign.name || '').gsub(/'/, '')}', '#{(sign.search_terms || '').gsub(/'/, '')}', '#{(sign.comment || '').gsub(/'/, '')}', '#{sign.image(:medium)}')" }.join(",\n")
          }
        ]);

        self.searchedSigns = ko.observableArray();
      }

      var viewModel = new AppViewModel();
      viewModel.query.subscribe(viewModel.search)

      ko.applyBindings(viewModel);
      //]]>
